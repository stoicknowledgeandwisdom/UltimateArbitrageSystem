[workspace]
resolver = "2"
members = [
    "core",
    "fpga", 
    "market_making",
    "cross_chain",
    "python_bindings"
]

[workspace.package]
version = "2.0.0"
authors = ["Ultimate Arbitrage System"]
edition = "2021"
license = "MIT"
repository = "https://github.com/ultimate-arbitrage/rust-engine"
description = "Ultra-High-Frequency Trading Engine with FPGA Support"
keywords = ["trading", "arbitrage", "high-frequency", "fpga", "rust"]
categories = ["algorithms", "finance"]

# Global workspace dependencies for version management
[workspace.dependencies]
# Core dependencies
tokio = { version = "1.35", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
anyhow = "1.0"
log = "0.4"
env_logger = "0.10"
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.6", features = ["v4"] }

# Performance dependencies
rayon = "1.8"             # Data parallelism
crossbeam = "0.8"         # Lock-free data structures
dashmap = "5.5"           # Concurrent hash map
parking_lot = "0.12"      # Fast mutex implementation
atomic = "0.6"            # Atomic operations
simd-json = "0.13"        # SIMD-accelerated JSON

# Memory management
memmap2 = "0.9"           # Memory mapping
jemallocator = "0.5"      # High-performance allocator
bumpalo = "3.14"          # Bump allocator for zero-copy

# Network and I/O
tokio-tungstenite = "0.20" # WebSocket client
reqwest = { version = "0.11", features = ["json"] }
hyper = { version = "0.14", features = ["full"] }
quinn = "0.10"             # QUIC protocol

# Cryptography and blockchain
secp256k1 = "0.28"        # Bitcoin cryptography
k256 = "0.13"             # Ethereum cryptography
sha2 = "0.10"             # SHA-256 hashing
blake3 = "1.5"            # BLAKE3 hashing

# FPGA and hardware interfaces
libc = "0.2"              # System calls
memfd = "0.6"             # Memory file descriptors

# Python bindings
pyo3 = { version = "0.20", features = ["extension-module"] }
numpy = "0.20"            # NumPy integration

# Testing and benchmarking
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4"          # Property testing
quickcheck = "1.0"        # QuickCheck testing

# Development dependencies
once_cell = "1.19"        # Lazy static initialization
lazy_static = "1.4"       # Static variables
static_assertions = "1.1" # Compile-time assertions

[profile.release]
# Ultra-high-performance optimizations
opt-level = 3              # Maximum optimization
lto = "fat"                # Link-time optimization
codegen-units = 1          # Single codegen unit for best optimization
panic = "abort"            # Abort on panic for smaller binaries
strip = true               # Strip symbols

[profile.dev]
opt-level = 1              # Some optimization for development
overflow-checks = true     # Enable overflow checks in debug

[profile.bench]
opt-level = 3              # Maximum optimization for benchmarks
lto = "fat"
codegen-units = 1
inherits = "release"

