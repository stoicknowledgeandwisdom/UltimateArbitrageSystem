server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    tenant_id: arbitrage-system
    batchwait: 1s
    batchsize: 1048576
    timeout: 10s
    backoff_config:
      min_period: 500ms
      max_period: 5m
      max_retries: 10

scrape_configs:
  # Application logs with structured JSON parsing
  - job_name: arbitrage-system
    static_configs:
      - targets:
          - localhost
        labels:
          job: arbitrage-system
          service: trading
          environment: production
          __path__: /app/logs/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            trace_id: trace_id
            span_id: span_id
            service: service
            module: module
            user_id: user_id
            exchange: exchange
            symbol: symbol
            order_id: order_id
            strategy: strategy
            pnl: pnl
            latency: latency
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          service:
          module:
          exchange:
          strategy:
      - output:
          source: message

  # Trading strategy logs
  - job_name: trading-strategies
    static_configs:
      - targets:
          - localhost
        labels:
          job: trading-strategies
          service: strategy
          __path__: /app/logs/strategies/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            trace_id: trace_id
            strategy_name: strategy_name
            signal_strength: signal_strength
            position_size: position_size
            expected_profit: expected_profit
            risk_score: risk_score
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          strategy_name:
      - output:
          source: message

  # Risk management logs
  - job_name: risk-management
    static_configs:
      - targets:
          - localhost
        labels:
          job: risk-management
          service: risk
          __path__: /app/logs/risk/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            trace_id: trace_id
            risk_type: risk_type
            portfolio_value: portfolio_value
            var_95: var_95
            max_drawdown: max_drawdown
            margin_ratio: margin_ratio
            position_limits: position_limits
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          risk_type:
      - output:
          source: message

  # Exchange connector logs
  - job_name: exchange-connectors
    static_configs:
      - targets:
          - localhost
        labels:
          job: exchange-connectors
          service: exchange
          __path__: /app/logs/exchanges/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            trace_id: trace_id
            exchange: exchange
            api_endpoint: api_endpoint
            response_time: response_time
            rate_limit_remaining: rate_limit_remaining
            error_code: error_code
            order_book_depth: order_book_depth
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          exchange:
          api_endpoint:
      - output:
          source: message

  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          service: system
          __path__: /var/log/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\S+\s+\S+)\s+(?P<hostname>\S+)\s+(?P<process>\S+):\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: Jan 02 15:04:05
      - labels:
          hostname:
          process:
      - output:
          source: message

  # Security logs
  - job_name: security
    static_configs:
      - targets:
          - localhost
        labels:
          job: security
          service: security
          __path__: /app/logs/security/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            event_type: event_type
            source_ip: source_ip
            user_agent: user_agent
            country: country
            threat_score: threat_score
            action_taken: action_taken
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          event_type:
          action_taken:
      - output:
          source: message

  # Airflow logs
  - job_name: airflow
    static_configs:
      - targets:
          - localhost
        labels:
          job: airflow
          service: orchestration
          __path__: /opt/airflow/logs/**/*.log
    pipeline_stages:
      - regex:
          expression: '^\[(?P<timestamp>[^\]]+)\]\s+\{(?P<dag_id>[^}]+)\}\s+(?P<level>\w+)\s+-\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05,000'
      - labels:
          level:
          dag_id:
      - output:
          source: message

  # Database logs
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          service: database
          __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d{3})\s+\w+\s+\[(?P<pid>\d+)\]\s+(?P<level>\w+):\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000'
      - labels:
          level:
          pid:
      - output:
          source: message

  # Container logs (if running on Docker)
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            timestamp: time
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: output

# Global configuration
global:
  file_watch_config:
    min_poll_frequency: 100ms
    max_poll_frequency: 1s

