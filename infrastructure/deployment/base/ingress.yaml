apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: arbitrage-app-stable
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - arbitrage.example.com
    secretName: arbitrage-app-tls
  rules:
  - host: arbitrage.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: arbitrage-app
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: arbitrage-app-canary
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-by-header: "X-Canary"
    nginx.ingress.kubernetes.io/canary-by-header-value: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - arbitrage.example.com
    secretName: arbitrage-app-tls
  rules:
  - host: arbitrage.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: arbitrage-app-canary
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: arbitrage-app-preview
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - preview.arbitrage.example.com
    secretName: arbitrage-app-preview-tls
  rules:
  - host: preview.arbitrage.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: arbitrage-app-preview
            port:
              number: 80

