# Airflow Scheduler Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-scheduler
  template:
    metadata:
      labels:
        app: airflow-scheduler
    spec:
      serviceAccountName: airflow
      containers:
      - name: airflow-scheduler
        image: arbitrage-airflow:latest
        command: ["airflow", "scheduler"]
        envFrom:
        - configMapRef:
            name: airflow-config
        - secretRef:
            name: airflow-secrets
        volumeMounts:
        - name: airflow-logs
          mountPath: /opt/airflow/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: airflow-logs
        persistentVolumeClaim:
          claimName: airflow-logs-pvc
      restartPolicy: Always
---
# Airflow Webserver Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      containers:
      - name: airflow-webserver
        image: arbitrage-airflow:latest
        command: ["airflow", "webserver"]
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: airflow-config
        - secretRef:
            name: airflow-secrets
        volumeMounts:
        - name: airflow-logs
          mountPath: /opt/airflow/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: airflow-logs
        persistentVolumeClaim:
          claimName: airflow-logs-pvc
      restartPolicy: Always
---
# Airflow Webserver Service
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
  namespace: airflow
spec:
  selector:
    app: airflow-webserver
  ports:
  - port: 8080
    targetPort: 8080
  type: LoadBalancer
---
# Airflow Logs PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-logs-pvc
  namespace: airflow
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi

